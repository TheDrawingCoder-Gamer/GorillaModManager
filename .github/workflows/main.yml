# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with: 
          haxe-version: 4.2.4

      - name: Install Haxelibs
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null
          haxelib install haxeui-core
          haxelib install haxeui-hxwidgets
          haxelib install hxWidgets
          haxelib install tink_http
      - name: Setup app (haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          sudo rm -f /etc/apt/sources.list.d/dotnetdev.list /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update
          sudo apt-get install build-essential
          sudo apt-get install libgtk-3-dev
          sudo apt-get install libwxbase3.0-dev
          sudo apt-get install zlib1g
          sudo apt-get install libpcre3
          sudo apt-get install libglw1-mesa
          sudo apt-get install libglw1-mesa-dev
          sudo apt-get install libglu1-mesa-dev
          sudo apt-get install freeglut3-dev
          sudo apt-get install mesa-common-dev
          wget https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.3/wxWidgets-3.1.3.tar.bz2
          tar xjf wxWidgets-3.1.3.tar.bz2
          cd wxWidgets-3.1.3
          ./configure --with-opengl --disable-shared > log.txt
          sudo make
          sudo make install
      - name: Build
        run: |
          haxe hxwidgets.hxml
          cp -R assets build/hxwidgets/
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with: 
          name: linuxBuild
          path: 'build/hxwidgets/'
  buildWindows: 
      runs-on: windows-latest
      env: 
        WXWIN: D:\a\GorillaModManager\GorillaModManager\wxWidgets-3.1.3
      steps: 
      - uses: actions/checkout@v2
      - uses: egor-tensin/vs-shell@v2
      - uses: krdlab/setup-haxe@master
        with: 
         haxe-version: 4.2.4

      - name: Install Haxelibs
        run: |
           haxelib setup ~/haxelib
           haxelib install hxcpp
           haxelib install haxeui-core
           haxelib install haxeui-hxwidgets
           haxelib install hxWidgets
           haxelib install tink_http
      - name: Install wxWidgets
        run: |
          C:\msys64\usr\bin\wget.exe https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.3/wxWidgets-3.1.3.tar.bz2
          7z x wxWidgets-3.1.3.tar.bz2
          7z x wxWidgets-3.1.3.tar
          cd wxWidgets-3.1.3\build\msw
          nmake.exe -f makefile.vc BUILD=release TARGET_CPU=x64
          nmake.exe -f makefile.vc BUILD=release SHARED=1 TARGET_CPU=x64
          cd ..\..\..
      - name: Build
        shell: powershell
        run: |
          haxe hxwidgets.hxml -D HXCPP_M64
          Copy-Item -Path "assets" -Destination "build/hxwidgets" -Recurse
      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with: 
          name: windowsBuild
          path: 'build/hxwidgets/'

